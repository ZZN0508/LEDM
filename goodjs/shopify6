import{l as o}from"https://cdn.shopify.com/shopifycloud/brochure-iii/production/_shared/chunk-7JU4SPCP.js";import{a as d}from"https://cdn.shopify.com/shopifycloud/brochure-iii/production/_shared/chunk-XG4BM7HW.js";import{e as m}from"https://cdn.shopify.com/shopifycloud/brochure-iii/production/_shared/chunk-G4JDLQHK.js";var t=m(d());var f=o?(e,r)=>{console.groupCollapsed(`%c[useIntersectionObserver] \u{1F440} DO NOT IGNORE \u{1F440} (Render #${r}) If you see this log spam the console, expand to investigate why...`,"font-weight: bold;"),console.log("useIntersectionObserver params should be memoized to avoid unnecessary observer re-creation."),console.log("Check the following stack trace to see where you may need to add some memoization (eg. useCallback, useMemo):"),console.log(e),console.groupEnd()}:null,b=(e,r,n)=>{let u=o?new Error().stack:"",s=(0,t.useRef)(0);(0,t.useEffect)(()=>{if(o){let c=setInterval(()=>{s.current=0},2e3);return()=>clearInterval(c)}},[]),(0,t.useEffect)(()=>{s.current++>=10&&f?.(u,s.current);let c=typeof n=="function"?n():n,l=new IntersectionObserver(r,c);if(Array.isArray(e.current))e.current.forEach(i=>{l.observe(i)});else if(e.current){let a=e.current;l.observe(a)}return()=>l.disconnect()},[r,n,e,u])},I=b;export{I as a};
