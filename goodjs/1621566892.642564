
        (function(a){
            var w=window,b='cbsoptanon',q='cmd',r='config';
            w[b] = w[b] ? w[b] : {};
            w[b][q] = w[b][q] ? w[b][q] : [];
            w[b][r] = w[b][r] ? w[b][r] : [];

            a.forEach(function(z){
                w[b][z] = w[b][z] || function(){
                    var c=arguments;
                    w[b][q].push(function(){
                        w[b][z].apply(w[b],c);
                    })
                }
            });
        })(["onIframesReady","onFormsReady","onScriptsReady","onAdsReady"]);

        //Add configs
        window.cbsoptanon.config.push({
            enableServices: false,
            setNpaOnConsentChange: true,
            euMaxAttempts: 25,
            countryCodeMaxAttempts: 25,
            oneTrustTimeout: 700
        });

        //Load iframes as soon as ready
        window.cbsoptanon.cmd.push(function(_cbsoptanon) {
            console.log('Loading iframes');
            _cbsoptanon.tags.load('IFRAME');
        });
    

    //grab push notification payload stored from ua-push-worker in indexedDB
    if ("indexedDB" in window) {
        var inDb;
        var inDbRequest = indexedDB.open("notifications", 1);

        inDbRequest.onupgradeneeded = function() {
          let db = inDbRequest.result;
          if (!db.objectStoreNames.contains('items')) {
            let notificationItems = db.createObjectStore('items', {autoIncrement:true});
          }
        };

        inDbRequest.onsuccess = function(event) {
            inDb = event.target.result;
            if (inDb.objectStoreNames.contains('items')) {
                //get the payload and save it in sessionstorage
                inDb.transaction(["items"], 'readwrite').objectStore("items").getAll().onsuccess = function(event) {

                    if (event.target.result) {
                        var notifIds = event.target.result;

                        try {
                            var lastNotifId = notifIds[notifIds.length - 1];
                            var decodedLastNotifId = atob(lastNotifId);
                            var notIdObj = JSON.parse(decodedLastNotifId);
                            window.CnetPageVars.notificationId = notIdObj.push_id;
                        } catch (err) {
                            return false;
                        }

                        if(typeof(Storage) !== 'undefined' && decodedLastNotifId && notIdObj.push_id) {
                            sessionStorage.setItem('v76_message_id', notIdObj.push_id);
                        }
                        //then clear the db table
                        inDb.transaction(["items"], 'readwrite').objectStore("items").clear().onsuccess = function(event) {
                        };
                    }
                };
            }
        };
    }

    
        if (typeof(Storage) !== 'undefined') {
                    }

    window.CnetPageVars = {
        ads: {
            data: {"gpt":{"targeting":{"section":"home","topic":["home","tablets","apple","features","trucks","roadshow","electric-cars","future-cars","tools","services","wearable-tech","computers","video-games","lenses","cameras"],"tag":[],"collection":"","edition":"us","test":"||","device":"desktop","ptype":"front_door","cid":"cnet-v2,71b9f799-8050-4fa2-b142-fe1a6dca1efc","env":"prod"},"adConfig":{"regions":[{"region":"uk","countries":["be","dk","fi","de","is","it","lu","nl","no","es","se","gb","ie","za","bh","kw","om","qa","sa","ae","iq","eg","fr"]},{"region":"au","countries":["au","nz"]},{"region":"asia","countries":["sg","my","th","id","ph","hk","vn","in","tw"]}],"network":{"dev":7336,"qa":7336,"prod":8264},"method":"async","adUnits":{"intromercial":[],"skin":[],"recirculation":[],"resourceCenterTop":[],"resourceCenterBottom":[],"mpuPlusTop":[],"marqueeTop":[],"mpuTop":[],"mpuBottom":[],"leaderPlusTop":[],"leaderTop":[],"buttonTop":[],"dynamicTextLinkTop":[],"mpuMiddle":[],"mpuPlusMiddle":[],"mpuMiddle2":[],"mpuPlusBottom":[],"leaderPlusMiddle":[],"leaderMiddle":[],"leaderMiddle2":[],"leaderMiddle3":[],"leaderMiddle4":[],"leaderBottom":[],"leaderPlusBottom":[],"leaderboardMiddle":[],"incontentAdTop":[],"incontentAdBottom":[],"nativeLeader":[],"nativeLeaderIncrement":[],"dynamicShowcaseTop":[],"infoButtonsTop":[],"replayWideTop":{"customTargeting":{"stc":"hLdUnarbeYV9Pyp9SvrvNk5M","strnativekey":"zVTqyZi6t9HKhLbkM2yzfEF7"}},"replayWideBottom":{"customTargeting":{"stc":"ZcNR3Gd9rZY7sgzwpJFVavYN","strnativekey":"TrufS81QUMrdEaWbmWQz3S7G"}},"nativeThisweekoncnet":{"customTargeting":{"stc":"d320ba44","strnativekey":"2434f2df"}},"nativeCompare":[],"overgifTop":[],"showcaseBottom":[],"showcaseTop":[],"videoThumbnailTop":[],"navAd":[],"navAdPlus":[],"navAdPlusLeader":[],"incontentAdPlusTop":[],"incontentAdPlusBillboardTop":[],"incontentAdPlusMiddle":[],"incontentAdPlusBillboardMiddle":[],"incontentAdPlusMiddle2":[],"incontentAdPlusBillboardMiddle2":[],"incontentAdPlusMiddle3":[],"incontentAdPlusBillboardMiddle3":[],"incontentAdPlusBottom":[],"incontentAdPlusBillboardBottom":[],"flexIncontentAdPlusBillboardTop":[],"incontentAdBillboardTop":[],"premierBrandsTop":[],"premierBrandsBottom":[],"sponsoredLogoTop":[],"sponsoredLogoBottom":[],"sponsoredLogoLarge":[],"nativeMpuTop":[],"nativeMpuMiddle":[],"nativeMiddle":{"customTargeting":{"stc":"u6MZ5FQWuFEMSMYrvFvqDMpa","strnativekey":"qri9VqSkrMXpKTQeviQ4mBCN"}},"nativeMiddle2":{"customTargeting":{"stc":"hrMz4T68b1NyJbYEjaSBaipU","strnativekey":"tqpK9jg3oimG96xpZqpdWTRT"}},"nativeMpuBottom":[],"browseCars":[],"dealsTileTop":[],"dealsTileMiddle2":[],"dealsTileMiddle3":[],"dealsTileBottom":[],"ampBanner":{"sizes":[[320,50]],"position":"increment"},"ampBannerSticky":{"sizes":[[320,50]],"position":"increment"},"ampMpu":{"sizes":[[300,250]],"position":"increment"},"ampMpuPlus":{"sizes":[[300,250],[320,480]],"position":"increment"},"ampReplayWide":{"sizes":[[11,11],"fluid"],"position":"increment"},"ampSponsoredLogo":{"sizes":[[88,31]],"position":"increment"}},"mobile":{"adUnits":{"hpto":[],"mobileBannerTop":[],"mobileBannerMpuHptoOverlay":[],"mobileMpuBottom":[],"mobileBanner":[],"mobileReplayWide":[],"mobileReplayWidePlus":[],"mobileBannerPlus":[],"mobileDealsTile":[],"mobileMpu":[],"mobileMpuNative":[],"mobileOvergif":[],"mobileShowcase":[],"mobileNavAd":[],"mobileNavAdPlus":[],"mobileIncontentAdPlus":[],"mobileIncontentAdPlusNewsbtm":[],"mobileSponsoredLogo":[],"mobileNativeBottom":[],"mobileFacebook":[],"mobileSponsoredLogoLarge":[],"mobileBrowseCars":[],"ampBanner":{"sizes":[[320,50]],"position":"increment"},"ampBannerSticky":{"sizes":[[320,50]],"position":"increment"},"ampMpu":{"sizes":[[300,250]],"position":"increment"},"ampMpuPlus":{"sizes":[[300,250],[320,480]],"position":"increment"},"ampReplayWide":{"sizes":[[11,11],"fluid"],"position":"increment"},"ampSponsoredLogo":{"sizes":[[88,31]],"position":"increment"}}},"siteName":"cnet","defaultRegion":"aw","deviceRegions":{"mobile":[{"region":"aw","countries":["all"]}],"desktop":[],"tablet":[]},"collapseEmptyDiv":false,"setRefreshUnfilledSlots":true,"setClearUnfilledSlots":false,"disableInitialLoad":false,"disableInitialLoadCompanions":false,"enableSingleRequest":true,"adOrder":[],"disableInitialLoadRefresh":"false","enableHeaderBidding":false,"disableAdIncrement":false,"disableClearTargetingOnInit":false,"enableRepeatedAds":false,"enableYieldIntelligence":"false"},"containerId":"60a724cf273a6","slotVars":{"network":"8264","siteName":"cnet","collapseEmptyDiv":"","topics":"home","platform":"desktop"},"adType":"gpt"},"cookieName":"cnet_ad","cookieServicePath":"\/ad\/ad-cookie\/","session":4,"subSession":6}
        },
        assetsHosts: ["https:\/\/www.cnet.com\/a\/fly"],
        assetsVersion: {
            version: '714451-fly'
        },
        auto: false,
        build: true,
        cmsEdit: {
            contentId: '71b9f799-8050-4fa2-b142-fe1a6dca1efc',
            contentType: 'feature'
        },
        device: 'desktop',
        deviceOriginal: 'desktop',
        disqus: {
            shortname: 'cnet-1',
            publicKey: 'ufGwgeeqlA0GFpKyNaNhEkmcPSqdHGlT5hwI5efgcclsQLIXaCAHU3PsuDiGNa7Z',
            sso: {
                name: 'CNET',
                authLoginUrl: '/disqus/sso/login/',
                authLogoutUrl: '/disqus/sso/logout/',
                button: 'https://www.cnet.com/a/fly/bundles/cnetcss/images/core/icon/favicon-32.png',
                icon: 'https://www.cnet.com/favicon.ico',
                loginUrl: 'https://www.cnet.com/?redirectUrl=/disqus/login/',
                logoutUrl: 'https://www.cnet.com/user/logout/',
                profileUrl: 'https://www.cnet.com/profiles/%7Busername%7D/'
            }
        },
        edition: {
            code: 'us'
        },
        environment: 'prod',
        pageType: 'front_door',
        personalization: {
            base: {
                project: 'i-cnet-prod',
                platform: 'web',
                environment: 'prod'
            },
            firebase: {
                config: {
                    apiKey: 'AIzaSyBqfebhuwHJuZRko9qIT87K_EIlKGTfHbA',
                    authDomain: 'i-cnet-engagement-prod.firebaseapp.com',
                    projectId: 'i-cnet-engagement-prod',
                    appId: '1:914013374524:web:4ae41512a7271cf2451b39',
                }
            },
            firestore: {
                collections: {
                    registered: {
                        users: 'r_users',
                        interests_summary: 'r_interests_summary'
                    },
                    anonymous: {
                        users: 'a_users',
                        interests_summary: 'a_interests_summary'
                    }
                },
                settings: {
                    host: 'firestore.googleapis.com',
                    ssl: true,
                    experimentalForceLongPolling: true
                }
            },
            functions: {
                override: false,
                origin: ''
            },
            urbanAirship: {
                appKey: 'vfB_rNe6QmqG3FM6u3fQ_w',
                token: 'MTp2ZkJfck5lNlFtcUczRk02dTNmUV93OjF4amNnZWVGZFpKeHd3R1hSSzF6N2xaZkw5clQ1ME4tQWpHUFpDRGU2Ujg',
                vapidPublicKey: 'BLjW5aAAExzAsGPWMgbTHPM+L7ShRKV5kbcp7aCqB0VCql/4QhAKiEHVZaTMX1wDmp5OdFcnFVAJrR5rK1x173g='
            }
        },
        services: {"5g":{"enabled":false},"5g_phones":{"enabled":false},"500px":{"enabled":true},"ab_test":{"enabled":true},"ad_heavy":{"enabled":false},"amazon_bidder":{"enabled":true},"amazon_native":{"enabled":true},"audiencescience":{"enabled":true},"bem":{"enabled":false},"bidbarrel":{"enabled":true},"censor_comments":{"enabled":false},"ces":{"enabled":false},"chatid":{"enabled":true},"chartbeat_headline":{"enabled":true},"chartbeat_tracking":{"enabled":true},"cohesion":{"enabled":true},"comscore":{"enabled":true},"content_discovery":{"enabled":true},"crazyegg":{"enabled":true},"digioh":{"enabled":true},"disqus":{"enabled":true},"dw":{"enabled":true},"dynamic_widget":{"enabled":false},"effective_measure":{"enabled":true},"eyeota":{"enabled":true},"facebook":{"enabled":true},"facebookmarketing":{"enabled":true},"finance_source":{"enabled":true},"finance":{"enabled":false},"wellness":{"enabled":false},"home":{"enabled":false},"flickr":{"enabled":true},"gdpr":{"enabled":true},"gifv":{"enabled":true},"google_analytics":{"enabled":true},"googlecsa":{"enabled":true},"googleima":{"enabled":true},"googleremarketing":{"enabled":true},"gpt":{"enabled":true},"google_maps":{"enabled":true},"heartbeat":{"enabled":true},"hgg":{"enabled":false},"hgg_timeframe":{"enabled":false},"indexexchange":{"enabled":true},"imgur":{"enabled":true},"instagram":{"enabled":true},"jsredirects":{"enabled":true},"linkedin":{"enabled":true},"livestream":{"enabled":true},"microsoft_tag_page":{"enabled":false},"mpulse":{"enabled":true},"mwc":{"enabled":false},"newsletter_reengagement":{"enabled":false},"nielsen":{"enabled":true},"one_trust":{"enabled":true},"pinterest":{"enabled":true},"playbuzz":{"enabled":true},"precap_listicle":{"enabled":false},"precap_listicle_deals":{"enabled":false},"precap_listicle_versus":{"enabled":false},"qualtrics":{"enabled":true},"recaptcha":{"enabled":true},"reddit":{"enabled":true},"review_pagination":{"enabled":false},"scribd":{"enabled":true},"service_worker":{"enabled":true},"sitecatalyst":{"enabled":true},"skybox":{"enabled":true},"skybox_autoplay":{"enabled":true},"sonobi":{"enabled":true},"soundcloud":{"enabled":true},"stackla":{"enabled":true},"tealium":{"enabled":true},"tealium_collect":{"enabled":true},"trackonomics":{"enabled":true},"trueanthem":{"enabled":true},"twitterwidget":{"enabled":true},"urban_airship":{"enabled":true},"verite":{"enabled":true},"vertical":{"enabled":false},"vertical_galleries":{"enabled":false},"video":{"enabled":true},"viglink":{"enabled":true},"vimeo":{"enabled":true},"yahoosyndication":{"enabled":true},"youtube":{"enabled":true}},
        tracking: {
            enabled: true
        },
        txId: 'becf8afd-f0e8-4c45-8acf-15b89581c715',
        user: {
            urls: {
                checkEmail: "/user/authentication/email/",
                forgot: "/user/authentication/forgot/",
                interests: "/user/authentication/interests/",
                login: "/user/authentication/login/",
                newsletters: "/user/authentication/newsletters/",
                modal: "/user/authentication/",
                register: "/user/authentication/register/",
                userData: "/user/get-data/",
                username: "/user/authentication/username/"
            }
        },
        video: {
            playCount: 0,
            prepend: ""
        },
        tagIds: []
    };


        
                    
                        var utag_data = {"isEnabled":true,"articleId":"71b9f799-8050-4fa2-b142-fe1a6dca1efc","articleTitle":"cnet homepage: current, 2019","articleType":"content_feature","collectionId":[],"deviceType":"desktop","isDev":"0","pageType":"front_door","siteEdition":"us","siteHier":["home","home"],"siteSection":"home","siteType":"responsive web","topicId":[],"topicName":[],"dwAccount":"cbsicnetglobalsite","dwHost":"dw.cbsi.com","siteId":1,"reportSuiteId":"cbsicnetglobalsite","slug":"cnet-v2","bkSiteId":3321,"limit":4,"brand":"cnet","topicSlugs":[],"viewType":"cnet_index_v2","siteName":"cnet","tealium":{"profile":"cnetglobalsite","env":"prod"},"secondaryCollectionIds":[],"error":"prod","soastaBucket":"","soastaPageType":"front_door","traffic_source":"cloud"};

        if (typeof utag_data == "object" && typeof(Storage) !== 'undefined') {
        utag_data.message_id = sessionStorage.getItem('v76_message_id');
        utag_data.contact_id = localStorage.getItem('v77_contact_id');
        utag_data.channel_id = localStorage.getItem('v78_channel_id');
    }


    var CnetFunctions = {
        /** Creates a tag with the specified attributes and body, then injects it after the injection point element. */
        appendElement: function(tagName, injectionPoint, attributes, body) {
            var element = document.createElement(tagName);
            for (var attribute in attributes) {
                var value = attributes[attribute];
                if (false !== value && null != value && '' !== value) {
                    element[attribute] = attributes[attribute];
                }
            }

            if (null != body) {
                element.innerHTML = body;
            }
            injectionPoint.parentNode.insertBefore(element, injectionPoint.nextSibling);
        },

        /** Need a helper function since the native method isn't available in IE. */
        endsWith: function(needle, haystack) {
            return haystack.indexOf(needle) === haystack.length - needle.length;
        },

        /**
            Execute a function as a callback once GDPR consent is granted.

            TODO -  See if we can update this method to prevent the stacking of callbacks. Specifically,
            if this is called on AJAX events, multiple instances of a single service call (like ad refresh)
            could be queued up and all fired at once when the user grants consent. Not currently an issue
            since we're assuming user consent by default, but that could change in the near future.
        */
        gdprConsentCallback: function(id, callback, callbackArgs, category, onReady) {
            if ((window.CnetPageVars.services.one_trust && window.CnetPageVars.services.one_trust.enabled)) {
                // One trust is enabled setup the functions
                onReady = onReady || 'Scripts';
                var opt = window.cbsoptanon['on'+onReady+'Ready'];

                function oneTrustLog(message) {
                    window.CnetFunctions.logWithLabel('%c One Trust ', message);
                }

                oneTrustLog("Added to "+ onReady +" Queue: " + id + ' ' + (category == null ? '' : category));

                opt(function(_cbsoptanon, options) {
                    //If we have categories we need to check if they are allowed
                    if (category != null) {
                        //Gets the current state of all categories
                        var checkState = function () {
                            _cbsoptanon.ot.getState(function (targeting, performance, functional, social) {
                                var obj = {
                                    targeting: targeting,
                                    performance: performance,
                                    functional: functional,
                                    social: social
                                };

                                var cat = category.toLowerCase();

                                if (obj[cat]) {
                                    oneTrustLog(cat + ' is allowed for ' + id);
                                    window.CnetPageVars.tagIds[id] = true;
                                    callback.apply(this, [callbackArgs, _cbsoptanon, options]);
                                }
                            });
                        };

                        checkState();

                        _cbsoptanon.ot.addOnConsentChangedHandler(function() {
                            if (window.CnetPageVars.tagIds[id] !== true) {
                                checkState();
                            }
                        });
                    } else {
                        //Just waiting for on ready fire callback
                        oneTrustLog(onReady + " Ready: Loaded " + id);
                        callback.apply(this, [callbackArgs, _cbsoptanon, options]);
                    }
                });
            } else {
                window.CnetFunctions.log("Service loading (GDPR consent already granted): " + id);
                callback.apply(this, callbackArgs);
            }
        },

        /** Get the value of a cookie by name. */
        getCookieValue: function(cookieName) {
            var cookieValue = window.document.cookie.match('(^|;)\\s*' + cookieName + '\\s*=\\s*([^;]+)');

            return cookieValue ? cookieValue.pop() : null;
        },

        /** Log to the console w/o exceptions thrown in IE. */
        log: function(message) {
            if (window.console) {
                window.console.log(message);
            }
        },

        /** Log with a label **/
        logWithLabel: function(label, message) {
            if (window.console) {
                window.console.log(label, 'color:#000;border-radius:3px;background-color:hsl(161, 100%, 94%);', message);
            }
        },

        /** Push Cohesion Tagular beam event. */
        pushCohesionBeam(data) {
            if (window.CnetPageVars.services.cohesion && window.CnetPageVars.services.cohesion.enabled) {
                if ('function' === typeof window.tagular) {
                    window.tagular('beam', data);
                }
            }
        },

        /** Trigger a custom event on the specified element. */
        triggerEvent: function(element, eventName, payload) {
            var event;
            payload = payload || {};

            if ('function' === typeof window.CustomEvent) {
                // Current W3C standard
                event = new CustomEvent(eventName, payload);
                element.dispatchEvent(event);
            } else if ('function' === typeof window.document.createEvent) {
                // Fallback for IE and really old browsers
                event = window.document.createEvent("Event");
                event.initEvent(eventName, true, true);
                event.eventName = eventName;
                element.dispatchEvent(event);
            }
        }
    };




    var _sf_async_config = _sf_async_config || {};
    _sf_async_config.uid = 66142;
    _sf_async_config.domain = "cnet.com";
    _sf_async_config.flickerControl = false;
    _sf_async_config.useCanonical = true;
    _sf_async_config.autoDetect = false;
    _sf_async_config.sections = "home";
    _sf_async_config.authors = "";
    _sf_async_config.contentType = "content_feature";
    var _sf_startpt = (new Date()).getTime();
    window._cbq = (window._cbq || []);


    (function() {
        if ('object' === typeof window.navigator.serviceWorker) {
            if (window.CnetPageVars.services.service_worker && window.CnetPageVars.services.service_worker.enabled) {
                // Register the global service worker here; others are registered by their respective managers.
                window.navigator.serviceWorker.register('/service-worker.js').then(function(registration) {
                    window.console.info('Registration of service worker /service-worker.js successful with scope:' + registration.scope);
                }, function(e) {
                    window.console.error('Registration of service worker /service-worker.js failed:', e);
                });
            }

            window.knownServiceWorkers = {};
            window.knownServiceWorkers[window.location.origin + "/service-worker.js"] = true;
            window.knownServiceWorkers[window.location.origin + "/bundles/cnetjs/js/libs/ua-push-worker.js"] = true;

            try {
                // This is experimental but supported by Chrome, Firefox, Edge, and Opera
                window.navigator.serviceWorker.getRegistrations().then(function(registrations) {
                    registrations.forEach(function(registration) {
                        var statusObject = registration.active || registration.installing || registration.waiting;
                        window.console.log('Found registered service worker:', registration);

                        // Unregister any service worker that has not been explicitly allowed
                        if (null != statusObject && !knownServiceWorkers[statusObject.scriptURL]) {
                            window.console.info('Unregistering service worker:', registration);
                            registration.unregister();
                        }
                    });
                });
            } catch (e) {
                // Safari doesn't support fetching all registered SWs, so only known registrations can be explicitly unregistered.
                Object.keys(knownServiceWorkers).forEach(function(url) {
                    if (!knownServiceWorkers[url]) {
                        window.navigator.serviceWorker.getRegistration(url).then(function(registration) {
                            window.console.info('Unregistering service worker:', registration);
                            registration.unregister();
                        }).catch(function(e) {
                            window.console.error('An error occurred while unregistering a service worker:', e);
                        });
                    }
                });
            }
        } else if ('object' === typeof window.console && 'function' === typeof window.console.warn) {
            // Don't break IE by calling this without checking the console exists first.
            window.console.warn('Service workers are not supported by this browser.');
        }
    })();


    window.BidBarrel = window.BidBarrel || {};
    window.BidBarrel.queue = window.BidBarrel.queue || [];


    (function(){
                !function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).uuidv4=e()}(this,(function(){"use strict";var t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto),e=new Uint8Array(16);function n(){if(!t)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(e)}for(var o=[],r=0;r<256;++r)o.push((r+256).toString(16).substr(1));return function(t,e,r){"string"==typeof t&&(e="binary"===t?new Uint8Array(16):null,t=null);var u=(t=t||{}).random||(t.rng||n)();if(u[6]=15&u[6]|64,u[8]=63&u[8]|128,e){for(var i=r||0,d=0;d<16;++d)e[i+d]=u[d];return e}return function(t,e){var n=e||0,r=o;return(r[t[n+0]]+r[t[n+1]]+r[t[n+2]]+r[t[n+3]]+"-"+r[t[n+4]]+r[t[n+5]]+"-"+r[t[n+6]]+r[t[n+7]]+"-"+r[t[n+8]]+r[t[n+9]]+"-"+r[t[n+10]]+r[t[n+11]]+r[t[n+12]]+r[t[n+13]]+r[t[n+14]]+r[t[n+15]]).toLowerCase()}(u)}}));

        function injectClickId(target) {
            const clickId = uuidv4().replaceAll('-', '');

                        target.setAttribute('href', target.href.replace("___COM_CLICK_ID___", clickId));

                        window.CnetFunctions.pushCohesionBeam({
                '@type': 'redventures.ecommerce.v1.ProductClicked',
                'product': {
                    'pageId': window?.CnetPageVars?.tracking?.data?.articleId ? window.CnetPageVars.tracking.data.articleId : ''
                },
                'correlationId': clickId
            });

                        setTimeout(function () {
                target.setAttribute('href', target.href.replace(clickId, "___COM_CLICK_ID___"));
            }, 500);
        }

                        document.addEventListener('DOMContentLoaded', function () {
            if (!window.leadsTracker) {
                let elements = document.querySelectorAll('a[data-component=leadsTracker]');
                for (element of elements) {
                    element.addEventListener('mousedown', event => {
                        if (!window.leadsTracker) {
                            let target = event.target.closest('a[data-component=leadsTracker]');
                            if (target) {
                                injectClickId(target);
                            }
                        }
                    });
                }
            }

            if (!window.externalLink) {
                let elements = document.querySelectorAll('a[data-component=externalLink]');
                for (element of elements) {
                    element.addEventListener('mousedown', event => {
                        if (!window.externalLink) {
                            let target = event.target.closest('a[data-component=externalLink]');
                            if (target) {
                                injectClickId(target);
                            }
                        }
                    });
                }
            }
        });
    })();


            window.CnetFunctions.logWithLabel('%c One Trust ', "Service loaded: script_cohesion with class optanon-category-2");
        

            window.CnetFunctions.logWithLabel('%c One Trust ', "Service loaded: script_chartbeat with class optanon-category-2");
        
(function () {
        try {
          console.log('PreAmp test script!');
        } catch (e) {
          if (window.console) console.error('Preamp Asset Error - console log - ', e);
        }
      })()